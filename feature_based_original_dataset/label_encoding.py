"""
This file maps features from an app to integer values, i.e. label encoding.
We create a dictionary with all features present in dataset as {feature:index},
for example the feature android.hardware.touchscreen maps as 0
First we take every app from the feature_vectors directory and we recreate every file
of the dataset in another directory. The new file has the indexes mapped to features.
For example, an app is represented as 6-0-2345-98776-1331110-1-45
"""
import os

feature_vector = {}  # dictionary with indexes mapped to features
index = 0  # index value
feature_vectors_dir = '../feature_vectors/'
feature_indexes_dir = 'features_indexes/'
if not os.path.exists(feature_indexes_dir):
    os.makedirs(feature_indexes_dir)

not_assignable_feature_type = ['']  # found from extract_feature_types.py

print("Creating a dictionary that maps features to numeric values...")
for filename in os.listdir(feature_vectors_dir):  # read all apps
    with open(feature_vectors_dir + filename, "r") as file:  # open an app
        for line in file:  # read app line by line
            feature_type = line[:line.find('::')]  # extract feature type
            feature = line.strip()  # remove whitespace chars
            if feature_type not in not_assignable_feature_type:   # check if feature type is ''
                # if a feature is not present in the feature vector, map feature to index and increment index
                if feature not in feature_vector:
                    feature_vector[feature] = index
                    index += 1

print("Creating files with numeric values as features...")
for filename in os.listdir(feature_vectors_dir):  # recreate files with indexes
    with open(feature_vectors_dir + filename, "r") as file:  # first open the orignal feature vectors
        f = open(feature_indexes_dir + filename, "a")  # create a new file with the same SHA name in another dir
        for line in file:  # read original feature vectors line by line
            feature_type = line[:line.find('::')]  # extract feature type
            feature = line.strip()  # remove whitespace chars
            if feature_type not in not_assignable_feature_type:  # check if feature type is ''
                f.write(str(feature_vector[feature]) + '\n')  # append the index of the feature to the new file
        f.close()
print(str(feature_vector['feature::android.hardware.touchscreen']))  # 0
print("Finished!")
print("Total features in dataset: ", len(feature_vector))  # 545333

'''
ffff64617c42e24fd1e572478279d547b834ef5e497f093ec59b3fb49ecec25f maps to 
0-15597-15-16-17-15598-3297-18-15599-20-114-178-15600-21-458-23-87-10-25-15602-36-27-32
-68-159-69-76-11-236-15603-216-782-43-3302-15604-66-2288-71-47-481598-79-415-289-13-15605
-15606-74-28-15607-58-447-162-35-80-290-139-188-790-464-15608-419-15609-61-15610-293-2
-37-38-39-78-40-84-26-3316-46-8-29-15611-44
'''
